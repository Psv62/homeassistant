heating_kitchen:

    climate:
      - platform: generic_thermostat
        name: kn_heater
        heater: switch.kn_radiator
        target_sensor: sensor.0x00158d0001581109_temperature
        # target_temp: 22
        # away_temp: 18
        min_temp: 16
        max_temp: 28
        ac_mode: false
        cold_tolerance: 0.5
        hot_tolerance: 0.5
        min_cycle_duration:
          minutes: 5
        keep_alive:
          minutes: 3
        initial_hvac_mode: "heat"

    binary_sensor:
    
    # Окно и дверь на балкон
      - platform: template
        sensors:
          kn_aeration:
            friendly_name: "Проветривание"
            value_template: >-
              {{ is_state('binary_sensor.0x00158d0001a99562_contact', 'on')  
                 or is_state('binary_sensor.0x00158d0001a20885_contact', 'on')
              }}
            delay_on: 
                seconds: 30
            device_class: window
            icon_template: >-
              {% if is_state("binary_sensor.kn_aeration", "on") %}
              mdi:window-open-variant
              {% else %}
              mdi:window-closed-variant
              {% endif %}

    # Фактическое состояние термостата
          kn_heat_valve:
            friendly_name: "Термостат кухня -"
            value_template: >-
                  {{ (states('sensor.0xec1bbdfffe9466c5_position')| int == 100) }}
            device_class: lock
            icon_template: >-
              {% if is_state("binary_sensor.kn_heat_valve", "on") %}
              mdi:valve-open
              {% else %}
              mdi:valve-closed
              {% endif %}

    sensor:

      - platform: template
        sensors:
          kn_heat_mode:
            friendly_name: "Режим отопления, Кухня -"
            value_template: >-
              {% if is_state('binary_sensor.radiator', 'off') %}
              Выключен
              {% elif is_state('binary_sensor.radiator', 'on') 
                 and is_state('binary_sensor.kn_aeration', 'on') %}
              Проветривание
              {% elif is_state('binary_sensor.radiator', 'on') 
                 and is_state('binary_sensor.occupancy', 'off') %}
              Не дома
              {% else %}
              Дома
              {% endif %}
            icon_template: >-
              {% if is_state("sensor.kn_heat_mode", "Выключен") %}
              mdi:radiator-off
              {% elif is_state("sensor.kn_heat_mode", "Проветривание") %}
              mdi:window-open-variant
              {% elif is_state("sensor.kn_heat_mode", "Не дома") %}
              mdi:account-group-outline
              {% else %}
              mdi:account-group
              {% endif %}
              
      - platform: mqtt
        name: kn_temp_home
        state_topic: "states/kn/temp_home"

      - platform: mqtt
        name: kn_temp_away
        state_topic: "states/kn/temp_away"

      - platform: mqtt
        name: kn_temp_window
        state_topic: "states/kn/window"   
              
    switch:              
      - platform: template
        switches:              
          kn_radiator:
            friendly_name: "Кухня головка радиатора"
            value_template: "{{ is_state('sensor.0xec1bbdfffe9466c5_force','OPEN') }}"
            turn_on:
              - service: mqtt.publish
                data_template:
                  topic: "ZigbeeSLS/KN thermostat/set/force"
                  payload_template: 'OPEN'
              - service: mqtt.publish
                data_template:
                  topic: "ZigbeeSLS/KN thermostat/set/current_heating_setpoint"
                  payload_template: '25'
            turn_off:
              - service: mqtt.publish
                data_template:
                  topic: "ZigbeeSLS/KN thermostat/set/force"
                  payload_template: 'CLOSE'
              - service: mqtt.publish
                data_template:
                  topic: "ZigbeeSLS/KN thermostat/set/current_heating_setpoint"
                  payload_template: '18'
            icon_template: >-
              {% if is_state('switch.kn_radiator', 'on') %}
                mdi:radiator
              {% else %}
                mdi:radiator-off
              {% endif %}
              
              
    automation:
    
      - id: Установка параметров отопления кухня
        alias: kn_heating_initial
        initial_state: true
        trigger:
        - platform: homeassistant
          event: start
        - platform: state
          entity_id:
            - binary_sensor.radiator
        action:
        - service_template: >-
           {% if states.binary_sensor.radiator.state == 'on' %}
           climate.turn_on
           {%-elif states.binary_sensor.radiator.state == 'off' %}
           climate.turn_off
           {% endif %}
          entity_id: climate.kn_heater
          
      - id: Установка параметров обогрева кухня
        alias: kn_heating_mode
        initial_state: true
        trigger:
          - platform: homeassistant
            event: start
          - platform: state
            entity_id:
              - sensor.kn_heat_mode
              - sensor.kn_temp_home
              - sensor.kn_temp_away
              - sensor.kn_temp_window
        condition:
          - condition: template
            value_template: "{{ states('sensor.kn_heat_mode') != 'Выключен' }}"
        action:
            - choose:
              - conditions:
                  - condition: state
                    entity_id: sensor.kn_heat_mode
                    state: "Дома"
                sequence:
                  - service: climate.set_temperature
                    data:
                      entity_id: climate.kn_heater
                      temperature: "{{ states('sensor.kn_temp_home')}}"
              - conditions:
                  - condition: state
                    entity_id: sensor.kn_heat_mode
                    state: "Не дома"
                sequence:
                  - service: climate.set_temperature
                    data:
                      entity_id: climate.kn_heater
                      temperature: "{{ states('sensor.kn_temp_away')}}"
              - conditions:
                  - condition: state
                    entity_id: sensor.kn_heat_mode
                    state: "Проветривание"
                sequence:
                  - service: climate.set_temperature
                    data:
                      entity_id: climate.kn_heater
                      temperature: "{{ states('sensor.kn_temp_window')}}"
                      
      - id: Изменение температуры с термостата кухня
        alias: kn_heating_thermo_temp
        initial_state: true
        trigger:
          - platform: state
            entity_id: climate.kn_heater
            attribute: temperature
        action:
            - choose:
              - conditions:
                  - condition: state
                    entity_id: sensor.kn_heat_mode
                    state: "Дома"
                sequence:
                  - service: mqtt.publish
                    data:
                      topic: 'states/kn/temp_home'
                      retain: true
                      payload: "{{ state_attr('climate.kn_heater', 'temperature') }}" 
              - conditions:
                  - condition: state
                    entity_id: sensor.kn_heat_mode
                    state: "Не дома"
                sequence:
                  - service: mqtt.publish
                    data:
                      topic: 'states/kn/temp_away'
                      retain: true
                      payload: "{{ state_attr('climate.kn_heater', 'temperature') }}" 
              - conditions:
                  - condition: state
                    entity_id: sensor.kn_heat_mode
                    state: "Проветривание"
                sequence:
                  - service: mqtt.publish
                    data:
                      topic: 'states/kn/temp_window'
                      retain: true
                      payload: "{{ state_attr('climate.kn_heater', 'temperature') }}" 
