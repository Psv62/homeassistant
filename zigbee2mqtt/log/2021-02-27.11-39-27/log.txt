error 2021-02-27 12:18:05: Not connected to MQTT server!
error 2021-02-27 13:48:29: Not connected to MQTT server!
error 2021-02-27 18:57:22: Failed to execute LQI for 'LR tv socket'
error 2021-02-27 19:10:14: Failed to execute LQI for 'LR tv socket'
error 2021-02-27 19:11:00: Publish 'set' 'power_outage_memory' to 'LR tv socket' failed: 'Error: Write 0x588e81fffed4af56/1 genOnOff({"32770":{"value":1,"type":48}}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 27366 - 1 - 18 - 6 - 4 after 10000ms)'
error 2021-02-27 19:11:24: Publish 'get' 'state' to 'LR tv socket' failed: 'Error: Read 0x588e81fffed4af56/1 genOnOff(["onOff"], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 27366 - 1 - 22 - 6 - 1 after 10000ms)'
error 2021-02-27 19:12:02: Publish 'set' 'power_outage_memory' to 'LR tv socket' failed: 'Error: Write 0x588e81fffed4af56/1 genOnOff({"32770":{"value":2,"type":48}}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 27366 - 1 - 25 - 6 - 4 after 10000ms)'
error 2021-02-27 19:14:27: Failed to execute LQI for 'LR tv socket'
error 2021-02-27 19:58:04: Failed to execute LQI for 'LR tv socket'
warn  2021-02-27 20:41:13: Device '0x588e81fffed4af56' left the network
warn  2021-02-27 20:42:05: Device '0x588e81fffed4af56' left the network
warn  2021-02-27 20:42:06: Device '0x588e81fffed4af56' left the network
warn  2021-02-27 20:42:06: Device '0x588e81fffed4af56' left the network
warn  2021-02-27 20:42:49: Device '0x588e81fffed4af56' left the network
warn  2021-02-27 20:42:50: Device '0x588e81fffed4af56' left the network
warn  2021-02-27 20:42:50: Device '0x588e81fffed4af56' left the network
warn  2021-02-28 20:05:18: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:05:19: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:05:19: Device '0x000d6f0014bb14b4' left the network
info  2021-02-28 20:07:27: MQTT publish: topic 'z2m_cc2652/bridge/response/config/log_level', payload '{"data":{"value":"info"},"status":"ok","transaction":"bg40r-1"}'
info  2021-02-28 20:07:27: MQTT publish: topic 'z2m_cc2652/bridge/info', payload '{"commit":"1.17.1","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"ISO_8601","legacy_api":true,"log_directory":"/config/zigbee2mqtt/log/%TIMESTAMP%","log_file":"log.txt","log_level":"warn","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{"0x000d6f0014bb14b4":{"friendly_name":"0x000d6f0014bb14b4"},"0x00158d00010f8920":{"friendly_name":"CR moving","retain":true},"0x00158d0001117040":{"friendly_name":"BT wd 2ch enter","retain":true},"0x00158d0001291d12":{"friendly_name":"KN tv power","retain":true},"0x00158d0002705b7b":{"friendly_name":"LN water leak","retain":true},"0x00158d0002a4f77e":{"friendly_name":"CR vibration","retain":true},"0x588e81fffed4af56":{"friendly_name":"LR tv socket","retain":true},"0x842e14fffe51c5ae":{"friendly_name":"LN washmashine","retain":true},"0xec1bbdfffe8d6ac9":{"friendly_name":"LN climate","retain":true}},"experimental":{"output":"json"},"external_converters":[],"frontend":{"port":8099},"groups":{},"homeassistant":true,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"z2m_cc2652","force_disable_retain":false,"include_device_information":false,"server":"mqtt://core-mosquitto","user":"mqtt"},"passlist":[],"permit_join":false,"queue":{},"serial":{"disable_led":false,"port":"/dev/ttyUSB0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":1,"majorrel":2,"minorrel":7,"product":1,"revision":20210211,"transportrev":2},"type":"zStack3x0"},"log_level":"info","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":true,"version":"1.17.1"}'
info  2021-02-28 20:07:28: MQTT publish: topic 'z2m_cc2652/CR moving', payload '{"battery":100,"last_seen":"2021-02-28T18:07:28.791Z","linkquality":105,"occupancy":true,"voltage":3015}'
warn  2021-02-28 20:08:00: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:08:01: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:08:01: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:11:02: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:11:03: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:11:03: Device '0x000d6f0014bb14b4' left the network
info  2021-02-28 20:11:50: MQTT publish: topic 'z2m_cc2652/bridge/response/config/log_level', payload '{"data":{"value":"info"},"status":"ok","transaction":"hfemz-2"}'
info  2021-02-28 20:11:50: MQTT publish: topic 'z2m_cc2652/bridge/info', payload '{"commit":"1.17.1","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"ISO_8601","legacy_api":true,"log_directory":"/config/zigbee2mqtt/log/%TIMESTAMP%","log_file":"log.txt","log_level":"warn","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{"0x000d6f0014bb14b4":{"friendly_name":"0x000d6f0014bb14b4"},"0x00158d00010f8920":{"friendly_name":"CR moving","retain":true},"0x00158d0001117040":{"friendly_name":"BT wd 2ch enter","retain":true},"0x00158d0001291d12":{"friendly_name":"KN tv power","retain":true},"0x00158d0002705b7b":{"friendly_name":"LN water leak","retain":true},"0x00158d0002a4f77e":{"friendly_name":"CR vibration","retain":true},"0x588e81fffed4af56":{"friendly_name":"LR tv socket","retain":true},"0x842e14fffe51c5ae":{"friendly_name":"LN washmashine","retain":true},"0xec1bbdfffe8d6ac9":{"friendly_name":"LN climate","retain":true}},"experimental":{"output":"json"},"external_converters":[],"frontend":{"port":8099},"groups":{},"homeassistant":true,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"z2m_cc2652","force_disable_retain":false,"include_device_information":false,"server":"mqtt://core-mosquitto","user":"mqtt"},"passlist":[],"permit_join":false,"queue":{},"serial":{"disable_led":false,"port":"/dev/ttyUSB0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":1,"majorrel":2,"minorrel":7,"product":1,"revision":20210211,"transportrev":2},"type":"zStack3x0"},"log_level":"info","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":false,"version":"1.17.1"}'
info  2021-02-28 20:11:55: MQTT publish: topic 'z2m_cc2652/bridge/response/config/log_level', payload '{"data":{"value":"debug"},"status":"ok","transaction":"hfemz-4"}'
info  2021-02-28 20:11:55: MQTT publish: topic 'z2m_cc2652/bridge/info', payload '{"commit":"1.17.1","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"ISO_8601","legacy_api":true,"log_directory":"/config/zigbee2mqtt/log/%TIMESTAMP%","log_file":"log.txt","log_level":"warn","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{"0x000d6f0014bb14b4":{"friendly_name":"0x000d6f0014bb14b4"},"0x00158d00010f8920":{"friendly_name":"CR moving","retain":true},"0x00158d0001117040":{"friendly_name":"BT wd 2ch enter","retain":true},"0x00158d0001291d12":{"friendly_name":"KN tv power","retain":true},"0x00158d0002705b7b":{"friendly_name":"LN water leak","retain":true},"0x00158d0002a4f77e":{"friendly_name":"CR vibration","retain":true},"0x588e81fffed4af56":{"friendly_name":"LR tv socket","retain":true},"0x842e14fffe51c5ae":{"friendly_name":"LN washmashine","retain":true},"0xec1bbdfffe8d6ac9":{"friendly_name":"LN climate","retain":true}},"experimental":{"output":"json"},"external_converters":[],"frontend":{"port":8099},"groups":{},"homeassistant":true,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"z2m_cc2652","force_disable_retain":false,"include_device_information":false,"server":"mqtt://core-mosquitto","user":"mqtt"},"passlist":[],"permit_join":false,"queue":{},"serial":{"disable_led":false,"port":"/dev/ttyUSB0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":1,"majorrel":2,"minorrel":7,"product":1,"revision":20210211,"transportrev":2},"type":"zStack3x0"},"log_level":"debug","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":false,"version":"1.17.1"}'
debug 2021-02-28 20:12:00: Received MQTT message on 'z2m_cc2652/bridge/request/config/log_level' with data '{"transaction":"hfemz-5","value":"info"}'
info  2021-02-28 20:12:00: MQTT publish: topic 'z2m_cc2652/bridge/response/config/log_level', payload '{"data":{"value":"info"},"status":"ok","transaction":"hfemz-5"}'
info  2021-02-28 20:12:00: MQTT publish: topic 'z2m_cc2652/bridge/info', payload '{"commit":"1.17.1","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"ISO_8601","legacy_api":true,"log_directory":"/config/zigbee2mqtt/log/%TIMESTAMP%","log_file":"log.txt","log_level":"warn","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{"0x000d6f0014bb14b4":{"friendly_name":"0x000d6f0014bb14b4"},"0x00158d00010f8920":{"friendly_name":"CR moving","retain":true},"0x00158d0001117040":{"friendly_name":"BT wd 2ch enter","retain":true},"0x00158d0001291d12":{"friendly_name":"KN tv power","retain":true},"0x00158d0002705b7b":{"friendly_name":"LN water leak","retain":true},"0x00158d0002a4f77e":{"friendly_name":"CR vibration","retain":true},"0x588e81fffed4af56":{"friendly_name":"LR tv socket","retain":true},"0x842e14fffe51c5ae":{"friendly_name":"LN washmashine","retain":true},"0xec1bbdfffe8d6ac9":{"friendly_name":"LN climate","retain":true}},"experimental":{"output":"json"},"external_converters":[],"frontend":{"port":8099},"groups":{},"homeassistant":true,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"z2m_cc2652","force_disable_retain":false,"include_device_information":false,"server":"mqtt://core-mosquitto","user":"mqtt"},"passlist":[],"permit_join":false,"queue":{},"serial":{"disable_led":false,"port":"/dev/ttyUSB0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":1,"majorrel":2,"minorrel":7,"product":1,"revision":20210211,"transportrev":2},"type":"zStack3x0"},"log_level":"info","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":false,"version":"1.17.1"}'
warn  2021-02-28 20:12:20: Device '0x000d6f0014bb14b4' left the network
error 2021-02-28 20:12:20: Failed to configure '0x000d6f0014bb14b4', attempt 1 (TypeError: ConfigureReporting 0x000d6f0014bb14b4/1 haElectricalMeasurement([{"attribute":"activePower","minimumReportInterval":5,"maximumReportInterval":3600,"reportableChange":1}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Cannot read property 'save' of undefined)
    at Endpoint.save (/app/node_modules/zigbee-herdsman/dist/controller/model/endpoint.js:338:25)
    at Endpoint.<anonymous> (/app/node_modules/zigbee-herdsman/dist/controller/model/endpoint.js:435:22)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/controller/model/endpoint.js:24:58))
warn  2021-02-28 20:12:21: Device '0x000d6f0014bb14b4' left the network
warn  2021-02-28 20:12:21: Device '0x000d6f0014bb14b4' left the network
error 2021-02-28 20:13:43: Failed to interview '0x000d6f0014bb14b4', device has not successfully been paired
error 2021-02-28 20:13:53: Failed to configure '0x000d6f0014bb14b4', attempt 2 (Error: Bind 0x000d6f0014bb14b4/1 genOnOff from '0x00124b0022811c73/1' failed (AREQ - ZDO - bindRsp after 10000ms)
    at Timeout._onTimeout (/app/node_modules/zigbee-herdsman/dist/utils/waitress.js:46:35)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7))
error 2021-03-01 18:06:56: Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67239936,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'MAC transaction expired' (240))'
warn  2021-03-01 18:07:20: Device '0x00158d000149d28b' left the network
warn  2021-03-01 18:07:29: Device '0x00158d000149d28b' left the network
error 2021-03-01 18:07:40: Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67239936,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
error 2021-03-01 18:08:02: Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
info  2021-03-01 18:08:02: MQTT publish: topic 'z2m_cc2652/bridge/response/config/log_level', payload '{"data":{"value":"debug"},"status":"ok","transaction":"rqi8z-1"}'
info  2021-03-01 18:08:02: MQTT publish: topic 'z2m_cc2652/bridge/info', payload '{"commit":"1.17.1","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"ISO_8601","legacy_api":true,"log_directory":"/config/zigbee2mqtt/log/%TIMESTAMP%","log_file":"log.txt","log_level":"warn","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{"0x000d6f0014bb14b4":{"friendly_name":"KN grill power","retain":true},"0x00158d00010f8920":{"friendly_name":"CR moving","retain":true},"0x00158d0001117040":{"friendly_name":"BT wd 2ch enter","retain":true},"0x00158d0001291d12":{"friendly_name":"KN tv power","retain":true},"0x00158d000149d28b":{"friendly_name":"0x00158d000149d28b"},"0x00158d0002705b7b":{"friendly_name":"LN water leak","retain":true},"0x00158d0002a4f77e":{"friendly_name":"CR vibration","retain":true},"0x588e81fffed4af56":{"friendly_name":"LR tv socket","retain":true},"0x842e14fffe51c5ae":{"friendly_name":"LN washmashine","retain":true},"0xec1bbdfffe8d6ac9":{"friendly_name":"LN climate","retain":true}},"experimental":{"output":"json"},"external_converters":[],"frontend":{"port":8099},"groups":{},"homeassistant":true,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"z2m_cc2652","force_disable_retain":false,"include_device_information":false,"server":"mqtt://core-mosquitto","user":"mqtt"},"passlist":[],"permit_join":false,"queue":{},"serial":{"disable_led":false,"port":"/dev/ttyUSB0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":1,"majorrel":2,"minorrel":7,"product":1,"revision":20210211,"transportrev":2},"type":"zStack3x0"},"log_level":"debug","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":true,"version":"1.17.1"}'
debug 2021-03-01 18:08:06: Received Zigbee message from '0x00158d000149d28b', type 'readResponse', cluster 'genBasic', data '{"swBuildId":"3000-0001"}' from endpoint 1 with groupID 0
debug 2021-03-01 18:08:09: Received Zigbee message from '0x00158d000149d28b', type 'readResponse', cluster 'ssIasZone', data '{"iasCieAddr":"0x0000000000000000","zoneState":0}' from endpoint 1 with groupID 0
debug 2021-03-01 18:08:09: No converter available for 'JTYJ-GD-01LM/BW' with cluster 'ssIasZone' and type 'readResponse' and data '{"iasCieAddr":"0x0000000000000000","zoneState":0}'
debug 2021-03-01 18:08:09: Received Zigbee message from 'KN tv power', type 'read', cluster 'genTime', data '["time"]' from endpoint 1 with groupID 0
debug 2021-03-01 18:08:19: Received Zigbee message from '0x00158d000149d28b', type 'readResponse', cluster 'ssIasZone', data '{"iasCieAddr":"0x00124b0022811c73","zoneState":1}' from endpoint 1 with groupID 0
debug 2021-03-01 18:08:19: No converter available for 'JTYJ-GD-01LM/BW' with cluster 'ssIasZone' and type 'readResponse' and data '{"iasCieAddr":"0x00124b0022811c73","zoneState":1}'
info  2021-03-01 18:08:19: Successfully interviewed '0x00158d000149d28b', device has successfully been paired
info  2021-03-01 18:08:19: Device '0x00158d000149d28b' is supported, identified as: Xiaomi MiJia Honeywell smoke detector (JTYJ-GD-01LM/BW)
info  2021-03-01 18:08:19: MQTT publish: topic 'z2m_cc2652/bridge/event', payload '{"data":{"definition":{"description":"MiJia Honeywell smoke detector","exposes":[{"access":1,"description":"Indicates whether the device detected smoke","name":"smoke","property":"smoke","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Indicates if the battery of this device is almost empty","name":"battery_low","property":"battery_low","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Indicates whether the device is tampered","name":"tamper","property":"tamper","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Remaining battery in %","name":"battery","property":"battery","type":"numeric","unit":"%","value_max":100,"value_min":0},{"access":3,"name":"sensitivity","property":"sensitivity","type":"enum","values":["low","medium","high"]},{"access":1,"name":"smoke_density","property":"smoke_density","type":"numeric"},{"access":2,"name":"selftest","property":"selftest","type":"enum","values":[""]},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"JTYJ-GD-01LM/BW","supports_ota":false,"vendor":"Xiaomi"},"friendly_name":"0x00158d000149d28b","ieee_address":"0x00158d000149d28b","status":"successful","supported":true},"type":"device_interview"}'
info  2021-03-01 18:08:19: MQTT publish: topic 'z2m_cc2652/bridge/devices', payload '[{"definition":null,"endpoints":{"1":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"10":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"11":{"bindings":[],"clusters":{"input":["ssIasAce"],"output":["ssIasZone","ssIasWd"]},"configured_reportings":[]},"110":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"12":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"13":{"bindings":[],"clusters":{"input":["genOta"],"output":[]},"configured_reportings":[]},"2":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"242":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"3":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"4":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"47":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"5":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"6":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"8":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]}},"friendly_name":"Coordinator","ieee_address":"0x00124b0022811c73","interview_completed":true,"interviewing":false,"network_address":0,"supported":false,"type":"Coordinator"},{"date_code":"","definition":{"description":"Temperature & humidity sensor with display","exposes":[{"access":1,"description":"Remaining battery in %","name":"battery","property":"battery","type":"numeric","unit":"%","value_max":100,"value_min":0},{"access":1,"description":"Measured temperature value","name":"temperature","property":"temperature","type":"numeric","unit":"°C"},{"access":1,"description":"Measured relative humidity","name":"humidity","property":"humidity","type":"numeric","unit":"%"},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"TS0201","supports_ota":false,"vendor":"TuYa"},"endpoints":{"1":{"bindings":[],"clusters":{"input":["genBasic","genPowerCfg","msTemperatureMeasurement","msRelativeHumidity"],"output":["genOta"]},"configured_reportings":[]}},"friendly_name":"LN climate","ieee_address":"0xec1bbdfffe8d6ac9","interview_completed":true,"interviewing":false,"model_id":"TS0201","network_address":36554,"power_source":"Battery","supported":true,"type":"EndDevice"},{"date_code":"11-25-2017","definition":{"description":"Aqara double key wired wall switch without neutral wire. Doesn't work as a router and doesn't support power meter","exposes":[{"endpoint":"left","features":[{"access":7,"description":"On/off state of the switch","endpoint":"left","name":"state","property":"state_left","type":"binary","value_off":"OFF","value_on":"ON","value_toggle":"TOGGLE"}],"type":"switch"},{"endpoint":"right","features":[{"access":7,"description":"On/off state of the switch","endpoint":"right","name":"state","property":"state_right","type":"binary","value_off":"OFF","value_on":"ON","value_toggle":"TOGGLE"}],"type":"switch"},{"access":1,"description":"Measured temperature value","name":"temperature","property":"temperature","type":"numeric","unit":"°C"},{"access":1,"description":"Triggered action (e.g. a button click)","name":"action","property":"action","type":"enum","values":["single_left","single_right","single_both"]},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"QBKG03LM","supports_ota":false,"vendor":"Xiaomi"},"endpoints":{"1":{"bindings":[],"clusters":{"input":["genBasic","genIdentify","genPowerCfg","genDeviceTempCfg","genOta","genTime"],"output":["genBasic","genTime","genOta"]},"configured_reportings":[]},"2":{"bindings":[],"clusters":{"input":["genBinaryOutput","genOnOff","genGroups","genScenes"],"output":[]},"configured_reportings":[]},"3":{"bindings":[],"clusters":{"input":["genBinaryOutput","genOnOff","genGroups","genScenes"],"output":[]},"configured_reportings":[]},"4":{"bindings":[],"clusters":{"input":["genMultistateInput","genOnOff"],"output":[]},"configured_reportings":[]},"5":{"bindings":[],"clusters":{"input":["genMultistateInput","genOnOff"],"output":[]},"configured_reportings":[]},"6":{"bindings":[],"clusters":{"input":["genMultistateInput","genOnOff"],"output":[]},"configured_reportings":[]},"8":{"bindings":[],"clusters":{"input":["genAnalogInput"],"output":[]},"configured_reportings":[]}},"friendly_name":"BT wd 2ch enter","ieee_address":"0x00158d0001117040","interview_completed":true,"interviewing":false,"model_id":"lumi.ctrl_neutral2","network_address":42133,"power_source":"DC Source","supported":true,"type":"EndDevice"},{"date_code":"","definition":{"description":"10A UK or 16A EU smart plug","exposes":[{"features":[{"access":7,"description":"On/off state of the switch","name":"state","property":"state","type":"binary","value_off":"OFF","value_on":"ON","value_toggle":"TOGGLE"}],"type":"switch"},{"access":1,"description":"Instantaneous measured power","name":"power","property":"power","type":"numeric","unit":"W"},{"access":1,"description":"Instantaneous measured electrical current","name":"current","property":"current","type":"numeric","unit":"A"},{"access":1,"description":"Measured electrical potential value","name":"voltage","property":"voltage","type":"numeric","unit":"V"},{"access":1,"description":"Sum of consumed energy","name":"energy","property":"energy","type":"numeric","unit":"kWh"},{"access":3,"description":"Recover state after power outage","name":"power_outage_memory","property":"power_outage_memory","type":"enum","values":["on","off","restore"]},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"TS0121_plug","supports_ota":false,"vendor":"TuYa"},"endpoints":{"1":{"bindings":[{"cluster":"genOnOff","target":{"endpoint":1,"ieee_address":"0x00124b0022811c73","type":"endpoint"}},{"cluster":"haElectricalMeasurement","target":{"endpoint":1,"ieee_address":"0x00124b0022811c73","type":"endpoint"}}],"clusters":{"input":["genBasic","genGroups","genScenes","genOnOff","seMetering","haElectricalMeasurement"],"output":["genOta","genTime"]},"configured_reportings":[]}},"friendly_name":"LN washmashine","ieee_address":"0x842e14fffe51c5ae","interview_completed":true,"interviewing":false,"model_id":"TS0121","network_address":25314,"power_source":"Mains (single phase)","supported":true,"type":"Router"},{"date_code":"20170721","definition":{"description":"Aqara water leak sensor","exposes":[{"access":1,"description":"Remaining battery in %","name":"battery","property":"battery","type":"numeric","unit":"%","value_max":100,"value_min":0},{"access":1,"description":"Indicates whether the device detected a water leak","name":"water_leak","property":"water_leak","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Indicates if the battery of this device is almost empty","name":"battery_low","property":"battery_low","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Indicates whether the device is tampered","name":"tamper","property":"tamper","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"SJCGQ11LM","supports_ota":false,"vendor":"Xiaomi"},"endpoints":{"1":{"bindings":[],"clusters":{"input":["genBasic","genIdentify","genPowerCfg"],"output":["genOta"]},"configured_reportings":[]}},"friendly_name":"LN water leak","ieee_address":"0x00158d0002705b7b","interview_completed":true,"interviewing":false,"model_id":"lumi.sensor_wleak.aq1","network_address":13151,"power_source":"Battery","software_build_id":"3000-0001","supported":true,"type":"EndDevice"},{"date_code":"","definition":{"description":"10A UK or 16A EU smart plug","exposes":[{"features":[{"access":7,"description":"On/off state of the switch","name":"state","property":"state","type":"binary","value_off":"OFF","value_on":"ON","value_toggle":"TOGGLE"}],"type":"switch"},{"access":1,"description":"Instantaneous measured power","name":"power","property":"power","type":"numeric","unit":"W"},{"access":1,"description":"Instantaneous measured electrical current","name":"current","property":"current","type":"numeric","unit":"A"},{"access":1,"description":"Measured electrical potential value","name":"voltage","property":"voltage","type":"numeric","unit":"V"},{"access":1,"description":"Sum of consumed energy","name":"energy","property":"energy","type":"numeric","unit":"kWh"},{"access":3,"description":"Recover state after power outage","name":"power_outage_memory","property":"power_outage_memory","type":"enum","values":["on","off","restore"]},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"TS0121_plug","supports_ota":false,"vendor":"TuYa"},"endpoints":{"1":{"bindings":[{"cluster":"genOnOff","target":{"endpoint":1,"ieee_address":"0x00124b0022811c73","type":"endpoint"}},{"cluster":"haElectricalMeasurement","target":{"endpoint":1,"ieee_address":"0x00124b0022811c73","type":"endpoint"}}],"clusters":{"input":["genBasic","genGroups","genScenes","genOnOff","seMetering","haElectricalMeasurement"],"output":["genOta","genTime"]},"configured_reportings":[]}},"friendly_name":"LR tv socket","ieee_address":"0x588e81fffed4af56","interview_completed":true,"interviewing":false,"model_id":"TS0121","network_address":57461,"power_source":"Mains (single phase)","supported":true,"type":"Router"},{"definition":{"description":"MiJia human body movement sensor","exposes":[{"access":1,"description":"Remaining battery in %","name":"battery","property":"battery","type":"numeric","unit":"%","value_max":100,"value_min":0},{"access":1,"description":"Indicates whether the device detected occupancy","name":"occupancy","property":"occupancy","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"RTCGQ01LM","supports_ota":false,"vendor":"Xiaomi"},"endpoints":{"1":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]}},"friendly_name":"CR moving","ieee_address":"0x00158d00010f8920","interview_completed":true,"interviewing":false,"model_id":"lumi.sensor_motion","network_address":1313,"power_source":"Battery","supported":true,"type":"EndDevice"},{"definition":{"description":"Aqara vibration sensor","exposes":[{"access":1,"description":"Remaining battery in %","name":"battery","property":"battery","type":"numeric","unit":"%","value_max":100,"value_min":0},{"access":1,"description":"Triggered action (e.g. a button click)","name":"action","property":"action","type":"enum","values":["vibration","tilt","drop"]},{"access":1,"name":"strength","property":"strength","type":"numeric"},{"access":3,"name":"sensitivity","property":"sensitivity","type":"enum","values":["low","medium","high"]},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"DJT11LM","supports_ota":false,"vendor":"Xiaomi"},"endpoints":{"1":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]}},"friendly_name":"CR vibration","ieee_address":"0x00158d0002a4f77e","interview_completed":true,"interviewing":false,"model_id":"lumi.vibration.aq1","network_address":39517,"power_source":"Battery","supported":true,"type":"EndDevice"},{"date_code":"04-20-2018","definition":{"description":"Mi power plug ZigBee","exposes":[{"features":[{"access":7,"description":"On/off state of the switch","name":"state","property":"state","type":"binary","value_off":"OFF","value_on":"ON","value_toggle":"TOGGLE"}],"type":"switch"},{"access":5,"description":"Instantaneous measured power","name":"power","property":"power","type":"numeric","unit":"W"},{"access":1,"description":"Sum of consumed energy","name":"energy","property":"energy","type":"numeric","unit":"kWh"},{"access":1,"description":"Measured temperature value","name":"temperature","property":"temperature","type":"numeric","unit":"°C"},{"access":3,"description":"Enable/disable the power outage memory, this recovers the on/off mode after power failure","name":"power_outage_memory","property":"power_outage_memory","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"ZNCZ02LM","supports_ota":false,"vendor":"Xiaomi"},"endpoints":{"1":{"bindings":[],"clusters":{"input":["genBasic","genGroups","genIdentify","genOnOff","genBinaryOutput","genScenes","genTime","genPowerCfg","genDeviceTempCfg"],"output":["genOta","genTime"]},"configured_reportings":[]},"2":{"bindings":[],"clusters":{"input":["genAnalogInput"],"output":["genAnalogInput","genGroups"]},"configured_reportings":[]},"3":{"bindings":[],"clusters":{"input":["genAnalogInput"],"output":["genAnalogInput"]},"configured_reportings":[]}},"friendly_name":"KN tv power","ieee_address":"0x00158d0001291d12","interview_completed":true,"interviewing":false,"model_id":"lumi.plug","network_address":26476,"power_source":"Mains (single phase)","supported":true,"type":"Router"},{"date_code":"2018.1.11","definition":{"description":"Smart metering plug","exposes":[{"features":[{"access":7,"description":"On/off state of the switch","name":"state","property":"state","type":"binary","value_off":"OFF","value_on":"ON","value_toggle":"TOGGLE"}],"type":"switch"},{"access":1,"description":"Instantaneous measured power","name":"power","property":"power","type":"numeric","unit":"W"},{"access":1,"description":"Instantaneous measured electrical current","name":"current","property":"current","type":"numeric","unit":"A"},{"access":1,"description":"Measured electrical potential value","name":"voltage","property":"voltage","type":"numeric","unit":"V"},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"HS2SK","supports_ota":false,"vendor":"HEIMAN"},"endpoints":{"1":{"bindings":[{"cluster":"genOnOff","target":{"endpoint":1,"ieee_address":"0x00124b0022811c73","type":"endpoint"}},{"cluster":"haElectricalMeasurement","target":{"endpoint":1,"ieee_address":"0x00124b0022811c73","type":"endpoint"}}],"clusters":{"input":["genBasic","genIdentify","genGroups","genOnOff","genAlarms","seMetering","haElectricalMeasurement"],"output":["genIdentify","genOta"]},"configured_reportings":[{"attribute":"onOff","cluster":"genOnOff","maximum_report_interval":3600,"minimum_report_interval":0,"reportable_change":0},{"attribute":"rmsVoltage","cluster":"haElectricalMeasurement","maximum_report_interval":3600,"minimum_report_interval":5,"reportable_change":1},{"attribute":"rmsCurrent","cluster":"haElectricalMeasurement","maximum_report_interval":3600,"minimum_report_interval":5,"reportable_change":1},{"attribute":"activePower","cluster":"haElectricalMeasurement","maximum_report_interval":3600,"minimum_report_interval":5,"reportable_change":1}]}},"friendly_name":"KN grill power","ieee_address":"0x000d6f0014bb14b4","interview_completed":true,"interviewing":false,"model_id":"SmartPlug","network_address":53792,"power_source":"Mains (single phase)","supported":true,"type":"Router"},{"date_code":"20161018","definition":{"description":"MiJia Honeywell smoke detector","exposes":[{"access":1,"description":"Indicates whether the device detected smoke","name":"smoke","property":"smoke","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Indicates if the battery of this device is almost empty","name":"battery_low","property":"battery_low","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Indicates whether the device is tampered","name":"tamper","property":"tamper","type":"binary","value_off":false,"value_on":true},{"access":1,"description":"Remaining battery in %","name":"battery","property":"battery","type":"numeric","unit":"%","value_max":100,"value_min":0},{"access":3,"name":"sensitivity","property":"sensitivity","type":"enum","values":["low","medium","high"]},{"access":1,"name":"smoke_density","property":"smoke_density","type":"numeric"},{"access":2,"name":"selftest","property":"selftest","type":"enum","values":[""]},{"access":1,"description":"Link quality (signal strength)","name":"linkquality","property":"linkquality","type":"numeric","unit":"lqi","value_max":255,"value_min":0}],"model":"JTYJ-GD-01LM/BW","supports_ota":false,"vendor":"Xiaomi"},"endpoints":{"1":{"bindings":[],"clusters":{"input":["genBasic","genIdentify","genMultistateInput","ssIasZone","genAnalogInput","genPowerCfg"],"output":["genOta"]},"configured_reportings":[]}},"friendly_name":"0x00158d000149d28b","ieee_address":"0x00158d000149d28b","interview_completed":true,"interviewing":false,"model_id":"lumi.sensor_smoke","network_address":49371,"power_source":"Battery","software_build_id":"3000-0001","supported":true,"type":"EndDevice"}]'
info  2021-03-01 18:08:19: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"interview_successful","meta":{"description":"MiJia Honeywell smoke detector","friendly_name":"0x00158d000149d28b","model":"JTYJ-GD-01LM/BW","supported":true,"vendor":"Xiaomi"},"type":"pairing"}'
debug 2021-03-01 18:08:22: Received Zigbee message from 'KN grill power', type 'attributeReport', cluster 'haElectricalMeasurement', data '{"rmsVoltage":22503}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:22: MQTT publish: topic 'z2m_cc2652/KN grill power', payload '{"current":0,"last_seen":"2021-03-01T16:08:22.406Z","linkquality":93,"power":0,"state":"ON","voltage":225.03}'
debug 2021-03-01 18:08:22: Received Zigbee message from 'LR tv socket', type 'attributeReport', cluster 'seMetering', data '{"currentSummDelivered":[0,96]}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:22: MQTT publish: topic 'z2m_cc2652/LR tv socket', payload '{"current":0,"energy":0.96,"last_seen":"2021-03-01T16:08:22.909Z","linkquality":177,"power":0,"power_outage_memory":"restore","state":"ON","voltage":225}'
debug 2021-03-01 18:08:23: Received Zigbee message from 'LR tv socket', type 'attributeReport', cluster 'seMetering', data '{"currentSummDelivered":[0,96]}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:23: MQTT publish: topic 'z2m_cc2652/LR tv socket', payload '{"current":0,"energy":0.96,"last_seen":"2021-03-01T16:08:23.007Z","linkquality":180,"power":0,"power_outage_memory":"restore","state":"ON","voltage":225}'
error 2021-03-01 18:08:23: Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
debug 2021-03-01 18:08:23: Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))
    at ZStackAdapter.<anonymous> (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:339:27)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:24:58)
info  2021-03-01 18:08:23: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({\"65521\":{\"value\":67305472,\"type\":35}}, {\"timeout\":35000,\"disableResponse\":false,\"disableRecovery\":false,\"disableDefaultResponse\":true,\"direction\":0,\"srcEndpoint\":null,\"reservedBits\":0,\"manufacturerCode\":4447,\"transactionSequenceNumber\":null}) failed (Data request failed with error: 'No network route' (205))'","meta":{"friendly_name":"EN smoke sensor"},"type":"zigbee_publish_error"}'
debug 2021-03-01 18:08:25: Received Zigbee message from 'BT wd 2ch enter', type 'attributeReport', cluster 'genBasic', data '{"65281":{"1":3300,"10":26476,"100":0,"101":1,"110":0,"111":1,"153":0,"155":0,"3":27,"5":319,"8":9749}}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:25: MQTT publish: topic 'z2m_cc2652/BT wd 2ch enter', payload '{"last_seen":"2021-03-01T16:08:25.774Z","linkquality":69,"operation_mode_right":"decoupled","state_left":"OFF","state_right":"ON","temperature":27}'
debug 2021-03-01 18:08:29: Received Zigbee message from 'BT wd 2ch enter', type 'read', cluster 'genTime', data '["time"]' from endpoint 1 with groupID 0
debug 2021-03-01 18:08:30: Received MQTT message on 'z2m_cc2652/0x00158d000149d28b/set' with data '{"sensitivity":"medium"}'
debug 2021-03-01 18:08:30: Publishing 'set' 'sensitivity' to '0x00158d000149d28b'
debug 2021-03-01 18:08:31: Received Zigbee message from 'LN washmashine', type 'readResponse', cluster 'haElectricalMeasurement', data '{"activePower":0,"rmsCurrent":0,"rmsVoltage":217}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:31: MQTT publish: topic 'z2m_cc2652/LN washmashine', payload '{"current":0,"energy":83.03,"last_seen":"2021-03-01T16:08:31.127Z","linkquality":66,"power":0,"power_outage_memory":"restore","state":"ON","voltage":217}'
info  2021-03-01 18:08:31: MQTT publish: topic 'z2m_cc2652/0x00158d000149d28b', payload '{"ac_status":false,"battery":100,"battery_low":false,"enrolled":false,"last_seen":"2021-03-01T16:08:31.471Z","linkquality":123,"restore_reports":false,"sensitivity":"medium","smoke":false,"smoke_density":0,"supervision_reports":false,"tamper":false,"trouble":false,"voltage":3095}'
debug 2021-03-01 18:08:34: Received Zigbee message from '0x00158d000149d28b', type 'attributeReport', cluster 'genBasic', data '{"modelId":"lumi.sensor_smoke"}' from endpoint 1 with groupID 0
debug 2021-03-01 18:08:34: Received Zigbee message from '0x00158d000149d28b', type 'commandStatusChangeNotification', cluster 'ssIasZone', data '{"extendedstatus":0,"zonestatus":0}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:34: MQTT publish: topic 'z2m_cc2652/0x00158d000149d28b', payload '{"ac_status":false,"battery":100,"battery_low":false,"enrolled":false,"last_seen":"2021-03-01T16:08:34.729Z","linkquality":123,"restore_reports":false,"sensitivity":"medium","smoke":false,"smoke_density":0,"supervision_reports":false,"tamper":false,"trouble":false,"voltage":3095}'
debug 2021-03-01 18:08:39: Received MQTT message on 'z2m_cc2652/0x00158d000149d28b/set' with data '{"selftest":""}'
debug 2021-03-01 18:08:39: Publishing 'set' 'selftest' to '0x00158d000149d28b'
debug 2021-03-01 18:08:41: Received Zigbee message from 'KN grill power', type 'attributeReport', cluster 'haElectricalMeasurement', data '{"rmsVoltage":22534}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:41: MQTT publish: topic 'z2m_cc2652/KN grill power', payload '{"current":0,"last_seen":"2021-03-01T16:08:41.878Z","linkquality":93,"power":0,"state":"ON","voltage":225.34}'
error 2021-03-01 18:08:45: Publish 'set' 'selftest' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":50397184,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
debug 2021-03-01 18:08:45: Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":50397184,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))
    at ZStackAdapter.<anonymous> (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:339:27)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:24:58)
info  2021-03-01 18:08:45: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"Publish 'set' 'selftest' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({\"65521\":{\"value\":50397184,\"type\":35}}, {\"timeout\":35000,\"disableResponse\":false,\"disableRecovery\":false,\"disableDefaultResponse\":true,\"direction\":0,\"srcEndpoint\":null,\"reservedBits\":0,\"manufacturerCode\":4447,\"transactionSequenceNumber\":null}) failed (Data request failed with error: 'No network route' (205))'","meta":{"friendly_name":"EN smoke sensor"},"type":"zigbee_publish_error"}'
debug 2021-03-01 18:08:59: Received Zigbee message from 'LR tv socket', type 'readResponse', cluster 'haElectricalMeasurement', data '{"activePower":0,"rmsCurrent":0,"rmsVoltage":225}' from endpoint 1 with groupID 0
info  2021-03-01 18:08:59: MQTT publish: topic 'z2m_cc2652/LR tv socket', payload '{"current":0,"energy":0.96,"last_seen":"2021-03-01T16:08:59.499Z","linkquality":153,"power":0,"power_outage_memory":"restore","state":"ON","voltage":225}'
debug 2021-03-01 18:09:05: Received Zigbee message from 'KN grill power', type 'attributeReport', cluster 'haElectricalMeasurement', data '{"rmsVoltage":22475}' from endpoint 1 with groupID 0
info  2021-03-01 18:09:05: MQTT publish: topic 'z2m_cc2652/KN grill power', payload '{"current":0,"last_seen":"2021-03-01T16:09:05.754Z","linkquality":90,"power":0,"state":"ON","voltage":224.75}'
error 2021-03-01 18:09:07: Publish 'set' 'selftest' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":50397184,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
debug 2021-03-01 18:09:07: Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":50397184,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))
    at ZStackAdapter.<anonymous> (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:339:27)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:24:58)
info  2021-03-01 18:09:07: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"Publish 'set' 'selftest' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({\"65521\":{\"value\":50397184,\"type\":35}}, {\"timeout\":35000,\"disableResponse\":false,\"disableRecovery\":false,\"disableDefaultResponse\":true,\"direction\":0,\"srcEndpoint\":null,\"reservedBits\":0,\"manufacturerCode\":4447,\"transactionSequenceNumber\":null}) failed (Data request failed with error: 'No network route' (205))'","meta":{"friendly_name":"EN smoke sensor"},"type":"zigbee_publish_error"}'
debug 2021-03-01 18:09:07: Received Zigbee message from 'KN tv power', type 'read', cluster 'genTime', data '["time"]' from endpoint 1 with groupID 0
debug 2021-03-01 18:09:16: Received MQTT message on 'z2m_cc2652/0x00158d000149d28b/set' with data '{"sensitivity":"high"}'
debug 2021-03-01 18:09:16: Publishing 'set' 'sensitivity' to '0x00158d000149d28b'
debug 2021-03-01 18:09:26: Received Zigbee message from 'KN grill power', type 'attributeReport', cluster 'haElectricalMeasurement', data '{"rmsVoltage":22542}' from endpoint 1 with groupID 0
info  2021-03-01 18:09:26: MQTT publish: topic 'z2m_cc2652/KN grill power', payload '{"current":0,"last_seen":"2021-03-01T16:09:26.686Z","linkquality":93,"power":0,"state":"ON","voltage":225.42}'
debug 2021-03-01 18:09:28: Received MQTT message on 'z2m_cc2652/0x00158d000149d28b/set' with data '{"sensitivity":"high"}'
debug 2021-03-01 18:09:28: Publishing 'set' 'sensitivity' to '0x00158d000149d28b'
error 2021-03-01 18:09:29: Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67174400,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
debug 2021-03-01 18:09:29: Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67174400,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))
    at ZStackAdapter.<anonymous> (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:339:27)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:24:58)
info  2021-03-01 18:09:29: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({\"65521\":{\"value\":67174400,\"type\":35}}, {\"timeout\":35000,\"disableResponse\":false,\"disableRecovery\":false,\"disableDefaultResponse\":true,\"direction\":0,\"srcEndpoint\":null,\"reservedBits\":0,\"manufacturerCode\":4447,\"transactionSequenceNumber\":null}) failed (Data request failed with error: 'No network route' (205))'","meta":{"friendly_name":"EN smoke sensor"},"type":"zigbee_publish_error"}'
debug 2021-03-01 18:09:30: Saving state to file /config/zigbee2mqtt/state.json
debug 2021-03-01 18:09:30: Received Zigbee message from 'BT wd 2ch enter', type 'read', cluster 'genTime', data '["time"]' from endpoint 1 with groupID 0
debug 2021-03-01 18:09:31: Received Zigbee message from 'LN washmashine', type 'readResponse', cluster 'haElectricalMeasurement', data '{"activePower":0,"rmsCurrent":0,"rmsVoltage":217}' from endpoint 1 with groupID 0
info  2021-03-01 18:09:31: MQTT publish: topic 'z2m_cc2652/LN washmashine', payload '{"current":0,"energy":83.03,"last_seen":"2021-03-01T16:09:31.121Z","linkquality":66,"power":0,"power_outage_memory":"restore","state":"ON","voltage":217}'
debug 2021-03-01 18:09:43: Received Zigbee message from 'KN grill power', type 'attributeReport', cluster 'haElectricalMeasurement', data '{"rmsVoltage":22524}' from endpoint 1 with groupID 0
info  2021-03-01 18:09:43: MQTT publish: topic 'z2m_cc2652/KN grill power', payload '{"current":0,"last_seen":"2021-03-01T16:09:43.220Z","linkquality":90,"power":0,"state":"ON","voltage":225.24}'
debug 2021-03-01 18:09:46: Received Zigbee message from 'LN washmashine', type 'attributeReport', cluster 'seMetering', data '{"currentSummDelivered":[0,8303]}' from endpoint 1 with groupID 0
info  2021-03-01 18:09:46: MQTT publish: topic 'z2m_cc2652/LN washmashine', payload '{"current":0,"energy":83.03,"last_seen":"2021-03-01T16:09:46.616Z","linkquality":66,"power":0,"power_outage_memory":"restore","state":"ON","voltage":217}'
error 2021-03-01 18:09:51: Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))'
debug 2021-03-01 18:09:51: Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'No network route' (205))
    at ZStackAdapter.<anonymous> (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:339:27)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:24:58)
info  2021-03-01 18:09:51: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"Publish 'set' 'sensitivity' to 'EN smoke sensor' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({\"65521\":{\"value\":67305472,\"type\":35}}, {\"timeout\":35000,\"disableResponse\":false,\"disableRecovery\":false,\"disableDefaultResponse\":true,\"direction\":0,\"srcEndpoint\":null,\"reservedBits\":0,\"manufacturerCode\":4447,\"transactionSequenceNumber\":null}) failed (Data request failed with error: 'No network route' (205))'","meta":{"friendly_name":"EN smoke sensor"},"type":"zigbee_publish_error"}'
debug 2021-03-01 18:09:54: Received MQTT message on 'z2m_cc2652/bridge/request/permit_join' with data '{"transaction":"o6kzj-1","value":false}'
info  2021-03-01 18:09:54: Zigbee: disabling joining new devices.
info  2021-03-01 18:09:54: MQTT publish: topic 'z2m_cc2652/bridge/response/permit_join', payload '{"data":{"value":false},"status":"ok","transaction":"o6kzj-1"}'
info  2021-03-01 18:09:55: MQTT publish: topic 'z2m_cc2652/bridge/info', payload '{"commit":"1.17.1","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"ISO_8601","legacy_api":true,"log_directory":"/config/zigbee2mqtt/log/%TIMESTAMP%","log_file":"log.txt","log_level":"warn","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{"0x000d6f0014bb14b4":{"friendly_name":"KN grill power","retain":true},"0x00158d00010f8920":{"friendly_name":"CR moving","retain":true},"0x00158d0001117040":{"friendly_name":"BT wd 2ch enter","retain":true},"0x00158d0001291d12":{"friendly_name":"KN tv power","retain":true},"0x00158d000149d28b":{"friendly_name":"0x00158d000149d28b"},"0x00158d0002705b7b":{"friendly_name":"LN water leak","retain":true},"0x00158d0002a4f77e":{"friendly_name":"CR vibration","retain":true},"0x588e81fffed4af56":{"friendly_name":"LR tv socket","retain":true},"0x842e14fffe51c5ae":{"friendly_name":"LN washmashine","retain":true},"0xec1bbdfffe8d6ac9":{"friendly_name":"LN climate","retain":true}},"experimental":{"output":"json"},"external_converters":[],"frontend":{"port":8099},"groups":{},"homeassistant":true,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"z2m_cc2652","force_disable_retain":false,"include_device_information":false,"server":"mqtt://core-mosquitto","user":"mqtt"},"passlist":[],"permit_join":false,"queue":{},"serial":{"disable_led":false,"port":"/dev/ttyUSB0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":1,"majorrel":2,"minorrel":7,"product":1,"revision":20210211,"transportrev":2},"type":"zStack3x0"},"log_level":"debug","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":false,"version":"1.17.1"}'
debug 2021-03-01 18:09:59: Received Zigbee message from 'LR tv socket', type 'readResponse', cluster 'haElectricalMeasurement', data '{"activePower":1,"rmsCurrent":34,"rmsVoltage":226}' from endpoint 1 with groupID 0
info  2021-03-01 18:09:59: MQTT publish: topic 'z2m_cc2652/LR tv socket', payload '{"current":0.03,"energy":0.96,"last_seen":"2021-03-01T16:09:59.344Z","linkquality":156,"power":1,"power_outage_memory":"restore","state":"ON","voltage":226}'
error 2021-03-01 18:09:59: Publish 'set' 'sensitivity' to '0x00158d000149d28b' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'MAC transaction expired' (240))'
debug 2021-03-01 18:09:59: Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'MAC transaction expired' (240))
    at ZStackAdapter.<anonymous> (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:339:27)
    at Generator.next (<anonymous>)
    at fulfilled (/app/node_modules/zigbee-herdsman/dist/adapter/z-stack/adapter/zStackAdapter.js:24:58)
info  2021-03-01 18:09:59: MQTT publish: topic 'z2m_cc2652/bridge/log', payload '{"message":"Publish 'set' 'sensitivity' to '0x00158d000149d28b' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({\"65521\":{\"value\":67305472,\"type\":35}}, {\"timeout\":35000,\"disableResponse\":false,\"disableRecovery\":false,\"disableDefaultResponse\":true,\"direction\":0,\"srcEndpoint\":null,\"reservedBits\":0,\"manufacturerCode\":4447,\"transactionSequenceNumber\":null}) failed (Data request failed with error: 'MAC transaction expired' (240))'","meta":{"friendly_name":"0x00158d000149d28b"},"type":"zigbee_publish_error"}'
debug 2021-03-01 18:10:04: Received Zigbee message from 'KN tv power', type 'attributeReport', cluster 'genBasic', data '{"65281":{"100":1,"149":213.65744018554688,"152":3.630000114440918,"154":0,"3":36,"5":54,"7":"0x0000000000000000","8":4896,"9":1538}}' from endpoint 1 with groupID 0
info  2021-03-01 18:10:04: MQTT publish: topic 'z2m_cc2652/KN tv power', payload '{"consumption":213.66,"energy":213.66,"last_seen":"2021-03-01T16:10:04.811Z","linkquality":69,"power":3.63,"power_outage_memory":true,"state":"ON","temperature":36}'
debug 2021-03-01 18:10:04: Received Zigbee message from 'KN tv power', type 'read', cluster 'genTime', data '["time"]' from endpoint 1 with groupID 0
debug 2021-03-01 18:10:08: Received Zigbee message from 'KN grill power', type 'attributeReport', cluster 'haElectricalMeasurement', data '{"rmsVoltage":22535}' from endpoint 1 with groupID 0
info  2021-03-01 18:10:08: MQTT publish: topic 'z2m_cc2652/KN grill power', payload '{"current":0,"last_seen":"2021-03-01T16:10:08.560Z","linkquality":93,"power":0,"state":"ON","voltage":225.35}'
debug 2021-03-01 18:10:25: Received MQTT message on 'z2m_cc2652/bridge/request/config/log_level' with data '{"transaction":"aomxd-1","value":"warn"}'
error 2021-03-01 18:10:42: Publish 'set' 'sensitivity' to '0x00158d000149d28b' failed: 'Error: Write 0x00158d000149d28b/1 ssIasZone({"65521":{"value":67305472,"type":35}}, {"timeout":35000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":4447,"transactionSequenceNumber":null}) failed (Data request failed with error: 'MAC transaction expired' (240))'
error 2021-03-02 09:12:37: Publish 'set' 'color_temp_startup' to '0x00158d000420dbab' failed: 'Error: Write 0x00158d000420dbab/1 lightingColorCtrl({"startUpColorTemperature":250}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Status 'UNSUPPORTED_ATTRIBUTE')'
error 2021-03-02 09:15:15: Failed to execute LQI for 'LR tv socket'
error 2021-03-02 10:09:00: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 16 - 6 - 11 after 10000ms)'
error 2021-03-02 10:18:00: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 49 - 6 - 11 after 10000ms)'
error 2021-03-02 10:49:11: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 166 - 6 - 11 after 10000ms)'
error 2021-03-02 11:47:46: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 134 - 6 - 11 after 10000ms)'
error 2021-03-02 14:12:44: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 181 - 6 - 11 after 10000ms)'
error 2021-03-02 15:12:44: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 159 - 6 - 11 after 10000ms)'
error 2021-03-02 15:18:49: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 182 - 6 - 11 after 10000ms)'
error 2021-03-02 15:19:15: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 186 - 6 - 11 after 10000ms)'
error 2021-03-02 15:30:44: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 229 - 6 - 11 after 10000ms)'
error 2021-03-02 15:39:44: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 9 - 6 - 11 after 10000ms)'
error 2021-03-02 17:06:44: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 94 - 6 - 11 after 10000ms)'
warn  2021-03-02 18:22:49: Device '0x00124b0022659c04' left the network
warn  2021-03-02 18:23:25: Device '0x00124b0022659c04' left the network
error 2021-03-02 18:23:25: Failed to configure '0x00124b0022659c04', attempt 1 (Error: DatabaseEntry with ID '20' does not exist
    at Database.update (/app/node_modules/zigbee-herdsman/dist/controller/database.js:37:19)
    at Device.save (/app/node_modules/zigbee-herdsman/dist/controller/model/device.js:211:35)
    at Configure.configure (/app/lib/extension/configure.js:134:20))
error 2021-03-02 18:23:38: Failed to interview '0x00124b0022659c04', device has not successfully been paired
error 2021-03-02 18:34:14: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 197 - 6 - 11 after 10000ms)'
error 2021-03-02 18:35:13: Failed to execute LQI for 'LR tv socket'
error 2021-03-02 18:35:24: Failed to execute LQI for 'KN tv power'
error 2021-03-02 18:35:36: Failed to execute LQI for 'DD E27 Aqara'
error 2021-03-02 18:35:50: Failed to execute LQI for 'DA 2ch relay'
error 2021-03-02 18:51:45: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 26 - 6 - 11 after 10000ms)'
error 2021-03-02 18:57:45: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.off({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 47 - 6 - 11 after 10000ms)'
error 2021-03-02 19:21:53: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 146 - 6 - 11 after 10000ms)'
error 2021-03-02 19:22:16: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 147 - 6 - 11 after 10000ms)'
error 2021-03-02 19:23:05: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 153 - 6 - 11 after 10000ms)'
warn  2021-03-02 19:42:58: Device '0x00124b0022659c04' left the network
error 2021-03-02 20:31:18: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msTemperatureMeasurement([{"attribute":"measuredValue","minimumReportInterval":"180","maximumReportInterval":1800,"reportableChange":50}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 170 - 1026 - 7 after 10000ms)'
error 2021-03-02 20:31:41: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msRelativeHumidity([{"attribute":"measuredValue","minimumReportInterval":"180","maximumReportInterval":3600,"reportableChange":100}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 171 - 1029 - 7 after 10000ms)'
error 2021-03-02 20:32:38: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msTemperatureMeasurement([{"attribute":"measuredValue","minimumReportInterval":"60","maximumReportInterval":1800,"reportableChange":50}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 177 - 1026 - 7 after 10000ms)'
error 2021-03-02 20:33:01: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msRelativeHumidity([{"attribute":"measuredValue","minimumReportInterval":"60","maximumReportInterval":3600,"reportableChange":100}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 178 - 1029 - 7 after 10000ms)'
error 2021-03-02 20:34:13: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msTemperatureMeasurement([{"attribute":"measuredValue","minimumReportInterval":"30","maximumReportInterval":1800,"reportableChange":50}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 186 - 1026 - 7 after 10000ms)'
error 2021-03-02 20:34:36: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msRelativeHumidity([{"attribute":"measuredValue","minimumReportInterval":"30","maximumReportInterval":3600,"reportableChange":100}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 187 - 1029 - 7 after 10000ms)'
error 2021-03-02 20:34:59: Request 'z2m_cc2652/bridge/request/device/configure_reporting' failed with error: 'ConfigureReporting 0x00124b0022659c04/1 msRelativeHumidity([{"attribute":"measuredValue","minimumReportInterval":"30","maximumReportInterval":3600,"reportableChange":100}], {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":true,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 16550 - 1 - 189 - 1029 - 7 after 10000ms)'
error 2021-03-02 20:36:36: Publish 'set' 'state' to 'DA 2ch relay' failed: 'Error: Command 0x00158d0002d7bb2b/2 genOnOff.on({}, {"timeout":10000,"disableResponse":false,"disableRecovery":false,"disableDefaultResponse":false,"direction":0,"srcEndpoint":null,"reservedBits":0,"manufacturerCode":null,"transactionSequenceNumber":null}) failed (Timeout - 50042 - 2 - 194 - 6 - 11 after 10000ms)'
